*{padding:0;margin:0;border:0}*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}a,a:hover,a:link,a:visited{text-decoration:none}aside,footer,header,legend,main,nav,section{display:block}h1,h2,h3,h4,h5,h6,p{font-size:inherit;font-weight:inherit}ul,ul li{list-style:none}img{vertical-align:top}img,svg{max-width:100%;height:auto}address{font-style:normal}input,select,textarea{background:0 0}button,input,select,textarea{font:inherit inherit;color:inherit}input::-ms-clear{display:none}button,input[type=submit]{display:inline-block;-webkit-box-shadow:none;box-shadow:none;background:0 0;cursor:pointer}button:active,button:focus,input:active,input:focus{outline:0}button::-moz-focus-inner{padding:0;border:0}label{cursor:pointer}html{scroll-behavior:smooth}body{background:var(--page-bg);color:var(--text-color);font-family:var(--font-main)}img{display:block}a{color:var(--link-color)}code,pre.code{background:#e9f1f6;padding:.2rem;border-radius:4px}pre.code{overflow-x:auto;padding:1rem}.header{background:#00f;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;color:#8a2be2}.header__title{font-size:40px;font-weight:800}.footer{background:#00f;color:#fff}.footer p{color:#7fffd4}@media (max-width:1199px){.footer,.header{color:red}}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
